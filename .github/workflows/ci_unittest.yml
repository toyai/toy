name: ci_unittest

on:
  release:
    types: [published]
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  unittest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      - run: echo "::set-output name=date::$(/bin/date "+%Y-%U")"
        id: get-date

      - run: echo "::set-output name=dir::$(pip cache dir)"
        id: pip-cache

      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.pip-cache.outputs.dir }}
          key: ${{ steps.get-date.outputs.date }}-py${{ matrix.python_version }}
          restore-keys: |
            ${{ steps.get-date.outputs.date }}-py${{ matrix.python_version }}
            ${{ steps.get-date.outputs.date }}-py

      - run: pip install wheel pip setuptools -U
      - run: pip install ".[testing]" --progress-bar off -Uf https://download.pytorch.org/whl/cpu/torch_stable.html
      - run: bash ./scripts/run_tests.sh
        env:
          TORCH_UTILS_COLLECT_ENV: 1

      - run: coverage html
        if: github.event_name == 'push'
      - uses: actions/upload-artifact@v2
        if: github.event_name == 'push'
        with:
          name: coverage-html
          path: htmlcov/*

  deploy_coverage:
    runs-on: ubuntu-latest
    needs: unittest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coverage-html
          path: htmlcov/

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: htmlcov
          publish_branch: gh-pages
          keep_files: false
          commit_message: Coverage deploy

  publish:
    runs-on: ubuntu-latest
    needs: unittest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - run: pip install wheel pip twine setuptools -U
      - run: |
          python setup.py sdist bdist_wheel
          twine check dist/*
          # TWINE_USERNAME="${{ secrets.PYPI_USERNAME }}" TWINE_PASSWORD="${{ secrets.PYPI_PASSWD }}" twine upload --verbose dist/*
